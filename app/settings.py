"""
Django settings for apile project.

Generated by 'django-admin startproject' using Django 2.0.9.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from local_settings import load_and_check_settings, LocalSetting, SecretSetting
#import django_heroku

PACKAGE = LocalSetting(default='django-app-template')
APP_NAME = LocalSetting(default='app')
DEBUG = LocalSetting(default=False)
APP_ENVIRONMENT = LocalSetting(default='DEV')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
APP_DIR = os.path.join(BASE_DIR, '{{ APP_NAME }}')
DATA_DIR= LocalSetting(default=os.path.join(BASE_DIR, 'data'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SecretSetting(doc='The secret key for doing secret stuff')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost','127.0.0.1']

# Application definition

INSTALLED_APPS = [
    # django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',

    # third party apps
    #'django_faker',
    
    # my apps
    'common',
    'registration',
    '{{ APP_NAME }}'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = LocalSetting(default='{{ APP_NAME }}.urls')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = LocalSetting(default='{{ APP_NAME }}.wsgi.application')


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': LocalSetting(default='django.db.backends.sqlite3'),
        'NAME': LocalSetting(default='{{ DATA_DIR }}/{{ APP_NAME }}.sqlite3'),
        'USER': LocalSetting(default=None),
        'PASSWORD': SecretSetting(),
        'HOST': LocalSetting(default=None),
        'PORT': LocalSetting(default=None),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = LocalSetting(default='en-us')

TIME_ZONE = LocalSetting(default='UTC')

USE_I18N = LocalSetting(default=True)

USE_L10N = LocalSetting(default=True)

USE_TZ = LocalSetting(default=True)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_ROOT = LocalSetting(default=os.path.join(BASE_DIR, 'static'))
STATIC_URL = LocalSetting(default='/static/')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'common/static'),
    os.path.join(APP_DIR, 'static'),
]

EMAIL_BACKEND = LocalSetting(default='django.core.mail.backends.console.EmailBackend')
DEFAULT_FROM_EMAIL = LocalSetting(default='no-reply@{{ APP_NAME }}.com')
EMAIL_HOST_USER = LocalSetting('')
EMAIL_HOST_PASSWORD = LocalSetting('')
EMAIL_USE_TLS = LocalSetting(default=False)
EMAIL_PORT = LocalSetting(default=1025)

LOGIN_REDIRECT_URL = LocalSetting(default="home")

FAKER_LOCALE = LocalSetting(default=None)     # settings.LANGUAGE_CODE is loaded
FAKER_PROVIDERS = LocalSetting(default=None)  # faker.DEFAULT_PROVIDERS is loaded (all)

# Activate django_heroku
#django_heroku.settings(locals())
_settings = load_and_check_settings(globals())
globals().update(_settings)
